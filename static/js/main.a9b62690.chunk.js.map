{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.js","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","css","profile","description","src","alt","width","name","icon","size","label","quantity","followers","views","likes","Statistics","title","statistics","statistics__list","map","stats_item","item","labe","percentage","id","FriendListItem","isOnline","online","status","offline","friend__item","FriendList","friends","friend__list","friend","TransactionHistory","transactions","transaction_history","tr_history__header","tr_history__header_th","transaction","tr_history__body_tr","tr_history__body_td","type","amount","currency","App","user","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9b62690.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__TVXP_\",\"description\":\"Profile_description__J-Fvh\",\"name\":\"Profile_name__2ZnBM\",\"avatar\":\"Profile_avatar__3CGt7\",\"icon\":\"Profile_icon__2zKw5\",\"tag\":\"Profile_tag__2LIzh\",\"location\":\"Profile_location__jq4P9\",\"label\":\"Profile_label__3_Tdl\",\"stats\":\"Profile_stats__IBsno\",\"quantity\":\"Profile_quantity__3-3iD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__2rQML\",\"tr_history__header_th\":\"TransactionHistory_tr_history__header_th__fJc2b\",\"tr_history__header\":\"TransactionHistory_tr_history__header__1zCw2\",\"tr_history__body_tr\":\"TransactionHistory_tr_history__body_tr__2lHZo\",\"tr_history__body_td\":\"TransactionHistory_tr_history__body_td__1ZDSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend__list\":\"FriendList_friend__list__3bNA0\",\"friend__item\":\"FriendList_friend__item__IcjgT\",\"status\":\"FriendList_status__2Ksj_\",\"online\":\"FriendList_online__34waN\",\"offline\":\"FriendList_offline__1UwUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3qXH0\",\"statistics__list\":\"Statistics_statistics__list__25TQ8\"};","\r\nimport PropTypes from 'prop-types';\r\nimport { GoLocation } from 'react-icons/go';\r\nimport css from './Profile.module.css';\r\n\r\nexport const Profile = ({ username, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={css.profile}>\r\n    <div className={css.description}>\r\n        <img\r\n        src={avatar}\r\n        alt=\"User avatar\"\r\n        className={css.avatar}\r\n        width=\"150px\"\r\n        />\r\n        <p className={css.name}>{username}</p>\r\n        <p className={css.tag}>@{tag}</p>\r\n        <p className={css.location}><GoLocation className={css.icon} size=\"16\" />{location}</p>\r\n  </div>\r\n\r\n    <ul className={css.stats}> \r\n     <li>\r\n       <span className={css.label}>Followers</span>\r\n       <span className={css.quantity}>{stats.followers}</span>\r\n     </li>\r\n     <li>\r\n       <span className={css.label}>Views</span>\r\n       <span className={css.quantity}>{stats.views}</span>\r\n     </li>\r\n     <li>\r\n       <span className={css.label}>Likes</span>\r\n       <span className={css.quantity}>{stats.likes}</span>\r\n     </li>\r\n   </ul>\r\n</div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n    username: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    }),\r\n  };\r\n","import PropTypes from 'prop-types';\r\nimport css from './Statistics.module.css';\r\n\r\nexport const Statistics = ({ title, stats}) => {\r\n    return (\r\n        <section className={css.statistics}>\r\n            {title && <h2 className={css.title}>{title}</h2>}\r\n      \r\n        <ul className={css.statistics__list}>\r\n          {stats.map(stats_item => (\r\n            <li className={css.item} key={stats_item.id}>\r\n            <span className={css.labe}>{stats_item.label}</span>\r\n            <span className={css.percentage}>{stats_item.percentage}</span>\r\n          </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  Statistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired,\r\n      }),\r\n    ).isRequired,\r\n  };","import PropTypes from 'prop-types';\r\nimport css from './FriendList.module.css';\r\n\r\nexport const FriendListItem = ({ avatar, name, id, isOnline }) => {\r\n    const online = `${css.status} ${isOnline ? css.online : css.offline}`;\r\n    return (\r\n        <li className={css.friend__item} key={id}>\r\n        <span className={online}></span>\r\n        <img className={css.avatar} src={avatar} alt=\"User avatar\" width=\"48\" />\r\n        <p className={css.name}>{name}</p>\r\n        </li>\r\n    );\r\n  }\r\n\r\n  FriendListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n  };","import PropTypes from 'prop-types';\r\nimport { FriendListItem } from './FriendListItem';\r\nimport css from './FriendList.module.css';\r\n\r\nexport const FriendList = ({ friends }) => {\r\n    return (\r\n        <ul className={css.friend__list}>\r\n            {friends.map(friend => (\r\n                <FriendListItem           \r\n                    key={friend.id}\r\n                    name={friend.name}\r\n                    avatar={friend.avatar}\r\n                    isOnline={friend.isOnline}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n  }\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport css from './TransactionHistory.module.css';\r\n\r\nexport const TransactionHistory = ({ transactions  }) => {\r\n    return (\r\n        <table  className={css.transaction_history}>\r\n            <thead className={css.tr_history__header}>\r\n                <tr>\r\n                    <th className={css.tr_history__header_th}>Type</th>\r\n                    <th className={css.tr_history__header_th}>Amount</th>\r\n                    <th className={css.tr_history__header_th}>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {transactions.map(transaction => (\r\n                <tr className={css.tr_history__body_tr} key={transaction.id}>\r\n                    <td className={css.tr_history__body_td}>{transaction.type}</td>\r\n                    <td className={css.tr_history__body_td}>{transaction.amount}</td>\r\n                    <td className={css.tr_history__body_td}>{transaction.currency}</td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};","import './App.css';\r\n\r\nimport { Profile } from '../Profile/Profile';\r\nimport user from '../Profile/user.json'\r\n\r\nimport { Statistics } from '../Statistics/Statistics';\r\nimport data from '../Statistics/data.json'\r\n\r\nimport { FriendList } from '../FriendList/FriendList';\r\nimport friends from '../FriendList/friends.json'\r\n\r\nimport { TransactionHistory } from '../TransactionHistory/TransactionHistory';\r\nimport transactions from '../TransactionHistory/transactions.json'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Profile\r\n        username={user.username}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n\r\n      <Statistics title=\"Upload stats\" stats={data} />\r\n      <Statistics stats={data} />\r\n\r\n      <FriendList friends={friends} />\r\n\r\n      <TransactionHistory transactions={transactions} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}